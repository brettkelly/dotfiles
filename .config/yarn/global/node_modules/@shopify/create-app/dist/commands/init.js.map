{"version":3,"file":"init.js","sourceRoot":"","sources":["../../src/commands/init.ts"],"names":[],"mappings":"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","sourcesContent":["import initPrompt, {templateURLMap} from '../prompts/init.js'\nimport initService from '../services/init.js'\nimport {Flags} from '@oclif/core'\nimport {globalFlags} from '@shopify/cli-kit/node/cli'\nimport Command from '@shopify/cli-kit/node/base-command'\nimport {resolvePath, cwd} from '@shopify/cli-kit/node/path'\nimport {AbortError} from '@shopify/cli-kit/node/error'\nimport {outputContent, outputToken} from '@shopify/cli-kit/node/output'\n// eslint-disable-next-line node/prefer-global/url\nimport {URL} from 'url'\n\nexport default class Init extends Command {\n  static aliases = ['create-app']\n\n  static flags = {\n    ...globalFlags,\n    name: Flags.string({\n      char: 'n',\n      env: 'SHOPIFY_FLAG_NAME',\n      hidden: false,\n    }),\n    path: Flags.string({\n      char: 'p',\n      env: 'SHOPIFY_FLAG_PATH',\n      parse: async (input) => resolvePath(input),\n      default: async () => cwd(),\n      hidden: false,\n    }),\n    template: Flags.string({\n      description: `The app template. Accepts one of the following:\n       - <${Object.keys(templateURLMap).join('|')}>\n       - Any GitHub repo with optional branch and subpath, e.g., https://github.com/Shopify/<repository>/[subpath]#[branch]`,\n      env: 'SHOPIFY_FLAG_TEMPLATE',\n    }),\n    'package-manager': Flags.string({\n      char: 'd',\n      env: 'SHOPIFY_FLAG_PACKAGE_MANAGER',\n      hidden: false,\n      options: ['npm', 'yarn', 'pnpm'],\n    }),\n    local: Flags.boolean({\n      char: 'l',\n      env: 'SHOPIFY_FLAG_LOCAL',\n      default: false,\n      hidden: true,\n    }),\n  }\n\n  async run(): Promise<void> {\n    const {flags} = await this.parse(Init)\n\n    this.validateTemplateValue(flags.template)\n\n    const promptAnswers = await initPrompt({\n      name: flags.name,\n      template: flags.template,\n      directory: flags.path,\n    })\n\n    await initService({\n      name: promptAnswers.name,\n      packageManager: flags['package-manager'],\n      template: promptAnswers.template,\n      local: flags.local,\n      directory: flags.path,\n    })\n  }\n\n  validateTemplateValue(template: string | undefined) {\n    if (!template) {\n      return\n    }\n\n    const url = this.parseURL(template)\n    if (url && url.origin !== 'https://github.com')\n      throw new AbortError(\n        'Only GitHub repository references are supported, ' +\n          'e.g., https://github.com/Shopify/<repository>/[subpath]#[branch]',\n      )\n    if (!url && !Object.keys(templateURLMap).includes(template))\n      throw new AbortError(\n        outputContent`Only ${Object.keys(templateURLMap)\n          .map((alias) => outputContent`${outputToken.yellow(alias)}`.value)\n          .join(', ')} template aliases are supported`,\n      )\n  }\n\n  parseURL(url: string): URL | undefined {\n    try {\n      return new URL(url)\n      // eslint-disable-next-line no-catch-all/no-catch-all\n    } catch (error) {\n      return undefined\n    }\n  }\n}\n"]}