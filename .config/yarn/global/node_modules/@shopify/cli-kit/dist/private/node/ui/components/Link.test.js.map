{"version":3,"file":"Link.test.js","sourceRoot":"","sources":["../../../../../src/private/node/ui/components/Link.test.tsx"],"names":[],"mappings":"AAAA,OAAO,EAAC,IAAI,EAAC,MAAM,WAAW,CAAA;AAC9B,OAAO,EAAC,MAAM,EAAC,MAAM,qBAAqB,CAAA;AAC1C,OAAO,EAAC,QAAQ,EAAE,MAAM,EAAE,IAAI,EAAE,EAAE,EAAC,MAAM,QAAQ,CAAA;AACjD,OAAO,KAAK,MAAM,OAAO,CAAA;AACzB,OAAO,kBAAkB,MAAM,qBAAqB,CAAA;AAEpD,EAAE,CAAC,IAAI,CAAC,qBAAqB,CAAC,CAAA;AAE9B,QAAQ,CAAC,MAAM,EAAE,KAAK,IAAI,EAAE;IAC1B,IAAI,CAAC,+EAA+E,EAAE,KAAK,IAAI,EAAE;QAC/F,QAAQ;QACR,iBAAiB,CAAC,KAAK,CAAC,CAAA;QAExB,MAAM,IAAI,GAAG;YACX,GAAG,EAAE,qBAAqB;YAC1B,KAAK,EAAE,SAAS;SACjB,CAAA;QAED,OAAO;QACP,MAAM,EAAC,SAAS,EAAC,GAAG,MAAM,CAAC,oBAAC,IAAI,OAAK,IAAI,GAAI,CAAC,CAAA;QAE9C,OAAO;QACP,MAAM,CAAC,SAAS,EAAE,CAAC,CAAC,qBAAqB,CAAC,4CAA4C,CAAC,CAAA;IACzF,CAAC,CAAC,CAAA;IAEF,IAAI,CAAC,oEAAoE,EAAE,KAAK,IAAI,EAAE;QACpF,QAAQ;QACR,iBAAiB,CAAC,IAAI,CAAC,CAAA;QAEvB,MAAM,IAAI,GAAG;YACX,GAAG,EAAE,qBAAqB;YAC1B,KAAK,EAAE,SAAS;SACjB,CAAA;QAED,OAAO;QACP,MAAM,EAAC,SAAS,EAAC,GAAG,MAAM,CAAC,oBAAC,IAAI,OAAK,IAAI,GAAI,CAAC,CAAA;QAE9C,OAAO;QACP,MAAM,CAAC,SAAS,EAAE,CAAC,CAAC,qBAAqB,CAAC,IAAI,MAAM,CAAC,qBAAqB,EAAE,SAAS,CAAC,GAAG,CAAC,CAAA;IAC5F,CAAC,CAAC,CAAA;IAEF,IAAI,CAAC,gGAAgG,EAAE,KAAK,IAAI,EAAE;QAChH,QAAQ;QACR,iBAAiB,CAAC,KAAK,CAAC,CAAA;QAExB,MAAM,IAAI,GAAG;YACX,GAAG,EAAE,qBAAqB;SAC3B,CAAA;QAED,OAAO;QACP,MAAM,EAAC,SAAS,EAAC,GAAG,MAAM,CAAC,oBAAC,IAAI,OAAK,IAAI,GAAI,CAAC,CAAA;QAE9C,OAAO;QACP,MAAM,CAAC,SAAS,EAAE,CAAC,CAAC,qBAAqB,CAAC,uBAAuB,CAAC,CAAA;IACpE,CAAC,CAAC,CAAA;IAEF,IAAI,CAAC,yFAAyF,EAAE,KAAK,IAAI,EAAE;QACzG,QAAQ;QACR,iBAAiB,CAAC,IAAI,CAAC,CAAA;QAEvB,MAAM,IAAI,GAAG;YACX,GAAG,EAAE,qBAAqB;SAC3B,CAAA;QAED,OAAO;QACP,MAAM,EAAC,SAAS,EAAC,GAAG,MAAM,CAAC,oBAAC,IAAI,OAAK,IAAI,GAAI,CAAC,CAAA;QAE9C,OAAO;QACP,MAAM,CAAC,SAAS,EAAE,CAAC,CAAC,qBAAqB,CAAC,IAAI,MAAM,CAAC,qBAAqB,CAAC,GAAG,CAAC,CAAA;IACjF,CAAC,CAAC,CAAA;IAEF,SAAS,iBAAiB,CAAC,WAAoB;QAC7C,EAAE,CAAC,MAAM,CAAC,kBAAkB,CAAC,CAAC,MAAM,GAAG,WAAW,CAAA;IACpD,CAAC;IAED,SAAS,MAAM,CAAC,GAAW,EAAE,KAAc;QACzC,OAAO,aAAa,GAAG,SAAS,KAAK,IAAI,GAAG,kBAAkB,CAAA;IAChE,CAAC;AACH,CAAC,CAAC,CAAA","sourcesContent":["import {Link} from './Link.js'\nimport {render} from '../../testing/ui.js'\nimport {describe, expect, test, vi} from 'vitest'\nimport React from 'react'\nimport supportsHyperlinks from 'supports-hyperlinks'\n\nvi.mock('supports-hyperlinks')\n\ndescribe('Link', async () => {\n  test(\"renders correctly with a fallback for terminals that don't support hyperlinks\", async () => {\n    // Given\n    supportHyperLinks(false)\n\n    const link = {\n      url: 'https://example.com',\n      label: 'Example',\n    }\n\n    // When\n    const {lastFrame} = render(<Link {...link} />)\n\n    // Then\n    expect(lastFrame()).toMatchInlineSnapshot('\"Example \u001b[2m( https://example.com )\u001b[22m\"')\n  })\n\n  test('renders correctly with a fallback for terminals support hyperlinks', async () => {\n    // Given\n    supportHyperLinks(true)\n\n    const link = {\n      url: 'https://example.com',\n      label: 'Example',\n    }\n\n    // When\n    const {lastFrame} = render(<Link {...link} />)\n\n    // Then\n    expect(lastFrame()).toMatchInlineSnapshot(`\"${asLink('https://example.com', 'Example')}\"`)\n  })\n\n  test(\"it doesn't render a fallback if only url is passed and the terminal doesn't support hyperlinks\", async () => {\n    // Given\n    supportHyperLinks(false)\n\n    const link = {\n      url: 'https://example.com',\n    }\n\n    // When\n    const {lastFrame} = render(<Link {...link} />)\n\n    // Then\n    expect(lastFrame()).toMatchInlineSnapshot('\"https://example.com\"')\n  })\n\n  test(\"it doesn't render a fallback if only url is passed and the terminal supports hyperlinks\", async () => {\n    // Given\n    supportHyperLinks(true)\n\n    const link = {\n      url: 'https://example.com',\n    }\n\n    // When\n    const {lastFrame} = render(<Link {...link} />)\n\n    // Then\n    expect(lastFrame()).toMatchInlineSnapshot(`\"${asLink('https://example.com')}\"`)\n  })\n\n  function supportHyperLinks(isSupported: boolean) {\n    vi.mocked(supportsHyperlinks).stdout = isSupported\n  }\n\n  function asLink(url: string, label?: string) {\n    return `\\u001b]8;;${url}\\u0007${label ?? url}\\u001b]8;;\\u0007`\n  }\n})\n"]}