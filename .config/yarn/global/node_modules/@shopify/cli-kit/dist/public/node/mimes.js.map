{"version":3,"file":"mimes.js","sourceRoot":"","sources":["../../../src/public/node/mimes.ts"],"names":[],"mappings":"AAAA,sCAAsC;AACtC,OAAO,EAAC,MAAM,EAAE,KAAK,EAAC,MAAM,QAAQ,CAAA;AAEpC;;;;;GAKG;AACH,MAAM,UAAU,cAAc,CAAC,QAAgB;IAC7C,OAAO,MAAM,CAAC,QAAQ,CAAC,IAAI,0BAA0B,CAAA;AACvD,CAAC;AAED;;;;GAIG;AACH,MAAM,UAAU,YAAY,CAAC,QAAiC;IAC5D,MAAM,CAAC,OAAO,CAAC,QAAQ,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC,SAAS,EAAE,QAAQ,CAAC,EAAE,EAAE;QACzD,KAAK,CAAC,SAAS,CAAC,GAAG,QAAQ,CAAA;IAC7B,CAAC,CAAC,CAAA;AACJ,CAAC","sourcesContent":["// import * as mimeTypes from 'mrmime'\nimport {lookup, mimes} from 'mrmime'\n\n/**\n * Returns the MIME type for a filename.\n *\n * @param fileName - Filename.\n * @returns The mime type.\n */\nexport function lookupMimeType(fileName: string): string {\n  return lookup(fileName) || 'application/octet-stream'\n}\n\n/**\n * Adds MIME type(s) to the dictionary.\n *\n * @param newTypes - Object of key-values where key is extension and value is mime type.\n */\nexport function setMimeTypes(newTypes: {[key: string]: string}): void {\n  Object.entries(newTypes).forEach(([extension, mimeType]) => {\n    mimes[extension] = mimeType\n  })\n}\n"]}