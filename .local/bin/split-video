#!/bin/bash

# Check if at least one argument is provided
if [ $# -lt 1 ]; then
    echo "Usage: $0 <video_file> [number_of_parts]"
    echo "Example: $0 input.mp4 3"
    exit 1
fi

# Check if FFmpeg is installed
if ! command -v ffmpeg >/dev/null 2>&1; then
    echo "Error: FFmpeg is not installed. Please install it first."
    exit 1
fi

# Check if ffprobe is installed
if ! command -v ffprobe >/dev/null 2>&1; then
    echo "Error: ffprobe is not installed. Please install FFmpeg."
    exit 1
fi

# Input file
INPUT="$1"

# Number of parts (default to 2 if not specified)
PARTS=${2:-2}

# Validate parts is a positive integer
if ! [[ "$PARTS" =~ ^[0-9]+$ ]] || [ "$PARTS" -lt 1 ]; then
    echo "Error: Number of parts must be a positive integer"
    exit 1
fi

# Check if file exists
if [ ! -f "$INPUT" ]; then
    echo "Error: File '$INPUT' not found!"
    exit 1
fi

# Get the base filename without extension
BASENAME=$(basename "$INPUT" | sed 's/\.[^.]*$//')

# Get duration in seconds
DURATION=$(ffprobe -v error -show_entries format=duration -of default=noprint_wrappers=1:nokey=1 "$INPUT" 2>/dev/null)
if [ -z "$DURATION" ]; then
    echo "Error: Could not determine video duration"
    exit 1
fi

# Calculate duration of each part
PART_DURATION=$(echo "$DURATION/$PARTS" | bc -l)

echo "Splitting '$INPUT' (Duration: ${DURATION}s) into $PARTS parts of approximately ${PART_DURATION}s each..."

# Loop to create each part
for ((i=0; i<PARTS; i++)); do
    START_TIME=$(echo "$PART_DURATION * $i" | bc -l)
    OUTPUT="${BASENAME}_part$((i+1)).mp4"
    
    echo "Creating part $((i+1))..."
    if [ $i -eq $((PARTS-1)) ]; then
        # Last part: go to end of video
        ffmpeg -i "$INPUT" -ss "$START_TIME" -c copy -map 0 "$OUTPUT" -y 2>/dev/null
    else
        # All other parts: use specific duration
        ffmpeg -i "$INPUT" -ss "$START_TIME" -t "$PART_DURATION" -c copy -map 0 "$OUTPUT" -y 2>/dev/null
    fi
    
    if [ $? -ne 0 ]; then
        echo "Error: Failed to create part $((i+1))"
        exit 1
    fi
done

echo "Success!"
echo "Created files:"
for ((i=0; i<PARTS; i++)); do
    echo "$((i+1)). ${BASENAME}_part$((i+1)).mp4"
don#!/bin/bash

# Check if at least one argument is provided
# if [ $# -lt 1 ]; then
#     echo "Usage: $0 <video_file> [number_of_parts]"
#         echo "Example: $0 input.mp4 3"
#             exit 1
#             fi
#
#             # Check if FFmpeg is installed
#             if ! command -v ffmpeg >/dev/null 2>&1; then
#                 echo "Error: FFmpeg is not installed. Please install it first."
#                     exit 1
#                     fi
#
#                     # Check if ffprobe is installed
#                     if ! command -v ffprobe >/dev/null 2>&1; then
#                         echo "Error: ffprobe is not installed. Please install FFmpeg."
#                             exit 1
#                             fi
#
#                             # Input file
#                             INPUT="$1"
#
#                             # Number of parts (default to 2 if not specified)
#                             PARTS=${2:-2}
#
#                             # Validate parts is a positive integer
#                             if ! [[ "$PARTS" =~ ^[0-9]+$ ]] || [ "$PARTS" -lt 1 ]; then
#                                 echo "Error: Number of parts must be a positive integer"
#                                     exit 1
#                                     fi
#
#                                     # Check if file exists
#                                     if [ ! -f "$INPUT" ]; then
#                                         echo "Error: File '$INPUT' not found!"
#                                             exit 1
#                                             fi
#
#                                             # Get the base filename without extension
#                                             BASENAME=$(basename "$INPUT" | sed 's/\.[^.]*$//')
#
#                                             # Get duration in seconds
#                                             DURATION=$(ffprobe -v error -show_entries format=duration -of default=noprint_wrappers=1:nokey=1 "$INPUT" 2>/dev/null)
#                                             if [ -z "$DURATION" ]; then
#                                                 echo "Error: Could not determine video duration"
#                                                     exit 1
#                                                     fi
#
#                                                     # Calculate duration of each part
#                                                     PART_DURATION=$(echo "$DURATION/$PARTS" | bc -l)
#
#                                                     echo "Splitting '$INPUT' (Duration: ${DURATION}s) into $PARTS parts of approximately ${PART_DURATION}s each..."
#
#                                                     # Loop to create each part
#                                                     for ((i=0; i<PARTS; i++)); do
#                                                         START_TIME=$(echo "$PART_DURATION * $i" | bc -l)
#                                                             OUTPUT="${BASENAME}_part$((i+1)).mp4"
#                                                                 
#                                                                     echo "Creating part $((i+1))..."
#                                                                         if [ $i -eq $((PARTS-1)) ]; then
#                                                                                 # Last part: go to end of video
#                                                                                         ffmpeg -i "$INPUT" -ss "$START_TIME" -c copy -map 0 "$OUTPUT" -y 2>/dev/null
#                                                                                             else
#                                                                                                     # All other parts: use specific duration
#                                                                                                             ffmpeg -i "$INPUT" -ss "$START_TIME" -t "$PART_DURATION" -c copy -map 0 "$OUTPUT" -y 2>/dev/null
#                                                                                                                 fi
#                                                                                                                     
#                                                                                                                         if [ $? -ne 0 ]; then
#                                                                                                                                 echo "Error: Failed to create part $((i+1))"
#                                                                                                                                         exit 1
#                                                                                                                                             fi
#                                                                                                                                             done
#
#                                                                                                                                             echo "Success!"
#                                                                                                                                             echo "Created files:"
#                                                                                                                                             for ((i=0; i<PARTS; i++)); do
#                                                                                                                                                 echo "$((i+1)). ${BASENAME}_part$((i+1)).mp4"
#                                                                                                                                                 donee
